{"version":3,"sources":["../../src/index.js","App.js","index.js"],"names":["query","mode","useState","preferredColorSchema","setPreferredColorSchema","window","isDark","isLight","useEffect","error","Container","styled","div","isDarkMode","background","color","css","App","usePrefersColorScheme","favicon","document","querySelector","href","ReactDOM","render","getElementById"],"mappings":"4wDAEA,IAAMA,EAAQ,SAAC,GAAD,IAAEC,EAAF,yD,EAEgB,WAAM,QACsBC,mBADtB,oBAC3BC,EAD2B,KACLC,EADK,KAKlC,uBAAWC,OAAP,WACF,SAGF,IAAMC,EAASD,kBAAkBL,EAAlBK,MAAf,QACME,EAAUF,kBAAkBL,EAAlBK,MAAhB,QAmCA,OAjCAG,qBAAU,WACIJ,EAAZ,SACSG,EAAJ,QACAH,mBACJ,CAACE,EAJJE,IAMAA,qBAAU,WACR,IACEH,kBACcL,EADdK,iCAII,8BAA4BD,EAA5B,WAGJC,kBACcL,EADdK,iCAII,8BAA4BD,EAA5B,YAEJ,MAAOK,GACPJ,kBACcL,EADdK,mBAEe,kBAAMD,EAAwBE,EAAS,QAAvC,WAGjB,OAAO,WACLD,kBAAkBL,EAAlBK,4BACAA,kBAAkBL,EAAlBK,+BAvBJG,IA2BA,G,iRC7CF,IAAME,EAAYC,IAAOC,KAAI,YAAqB,IAAlBC,EAAiB,EAAjBA,WACxBC,EAAaD,EAAa,QAAU,QACpCE,EAAQF,EAAa,QAAU,OAErC,OAAOG,YAAP,IAEgBF,EACLC,MA2BEE,EAjBH,WACV,IACMJ,EAAsC,SADfK,IAS7B,OANAV,qBAAU,WACR,IAAMW,EAAUC,SAASC,cAAc,YACvBF,EAAQG,KAApBT,EAA2B,WACX,eAIpB,kBAACH,EAAD,CAAWG,WAAYA,GAAvB,iBACiBA,EAAa,yBAAiB,0BAD/C,MC1BJU,IAASC,OAAO,kBAAC,EAAD,MAASJ,SAASK,eAAe,W","file":"static/js/main.b07d2ecb.chunk.js","sourcesContent":["import { useEffect, useState } from 'react'\n\nconst query = ([mode]) => `(prefers-color-scheme: ${mode})`\n\nconst usePrefersColorScheme = () => {\n  const [preferredColorSchema, setPreferredColorSchema] = useState(\n    'no-preference',\n  )\n\n  if (typeof window.matchMedia !== 'function') {\n    return preferredColorSchema\n  }\n\n  const isDark = window.matchMedia(query`dark`).matches\n  const isLight = window.matchMedia(query`light`).matches\n\n  useEffect(() => {\n    if (isDark) setPreferredColorSchema('dark')\n    else if (isLight) setPreferredColorSchema('light')\n    else setPreferredColorSchema('no-preference')\n  }, [isDark, isLight])\n\n  useEffect(() => {\n    try {\n      window\n        .matchMedia(query`dark`)\n        .addEventListener(\n          'change',\n          ({ matches }) => matches && setPreferredColorSchema('dark'),\n        )\n\n      window\n        .matchMedia(query`light`)\n        .addEventListener(\n          'change',\n          ({ matches }) => matches && setPreferredColorSchema('light'),\n        )\n    } catch (error) {\n      window\n        .matchMedia(query`dark`)\n        .addListener(() => setPreferredColorSchema(isDark ? 'light' : 'dark'))\n    }\n\n    return () => {\n      window.matchMedia(query`dark`).removeEventListener()\n      window.matchMedia(query`light`).removeEventListener()\n    }\n  }, [])\n\n  return preferredColorSchema\n}\n\nexport default usePrefersColorScheme\n","import React, { useEffect } from 'react'\nimport styled, { css } from 'styled-components'\nimport usePrefersColorScheme from 'use-prefers-color-scheme'\n\nconst Container = styled.div(({ isDarkMode }) => {\n  const background = isDarkMode ? 'black' : 'white'\n  const color = isDarkMode ? 'white' : 'dark'\n\n  return css`\n    align-items: center;\n    background: ${background};\n    color: ${color};\n    display: flex;\n    font-size: 2em;\n    height: 100%;\n    justify-content: center;\n    padding: 24px;\n    text-align: center;\n  `\n})\n\nconst App = () => {\n  const preferredColorSchema = usePrefersColorScheme()\n  const isDarkMode = preferredColorSchema === 'dark'\n\n  useEffect(() => {\n    const favicon = document.querySelector('.favicon')\n    if (isDarkMode) favicon.href = 'dark.png'\n    else favicon.href = 'light.png'\n  })\n\n  return (\n    <Container isDarkMode={isDarkMode}>\n      You are using {isDarkMode ? 'Dark Mode ðŸŒš' : 'Light Mode ðŸŒž'}!\n    </Container>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}